// Code generated by protoc-gen-go. DO NOT EDIT.
// source: log.proto

package log

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// InternalMessage has the details of a message that is going to
// be sent under the corporate account. It contains details that
// wouldn't be sent to the Tritter service, such as username of
// the user that made the request.
type InternalMessage struct {
	User                 string               `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Message              string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *InternalMessage) Reset()         { *m = InternalMessage{} }
func (m *InternalMessage) String() string { return proto.CompactTextString(m) }
func (*InternalMessage) ProtoMessage()    {}
func (*InternalMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{0}
}

func (m *InternalMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalMessage.Unmarshal(m, b)
}
func (m *InternalMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalMessage.Marshal(b, m, deterministic)
}
func (m *InternalMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalMessage.Merge(m, src)
}
func (m *InternalMessage) XXX_Size() int {
	return xxx_messageInfo_InternalMessage.Size(m)
}
func (m *InternalMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalMessage.DiscardUnknown(m)
}

var xxx_messageInfo_InternalMessage proto.InternalMessageInfo

func (m *InternalMessage) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *InternalMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *InternalMessage) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type LogRequest struct {
	Message              *InternalMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LogRequest) Reset()         { *m = LogRequest{} }
func (m *LogRequest) String() string { return proto.CompactTextString(m) }
func (*LogRequest) ProtoMessage()    {}
func (*LogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{1}
}

func (m *LogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRequest.Unmarshal(m, b)
}
func (m *LogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRequest.Marshal(b, m, deterministic)
}
func (m *LogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRequest.Merge(m, src)
}
func (m *LogRequest) XXX_Size() int {
	return xxx_messageInfo_LogRequest.Size(m)
}
func (m *LogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogRequest proto.InternalMessageInfo

func (m *LogRequest) GetMessage() *InternalMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type LogResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogResponse) Reset()         { *m = LogResponse{} }
func (m *LogResponse) String() string { return proto.CompactTextString(m) }
func (*LogResponse) ProtoMessage()    {}
func (*LogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{2}
}

func (m *LogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogResponse.Unmarshal(m, b)
}
func (m *LogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogResponse.Marshal(b, m, deterministic)
}
func (m *LogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogResponse.Merge(m, src)
}
func (m *LogResponse) XXX_Size() int {
	return xxx_messageInfo_LogResponse.Size(m)
}
func (m *LogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*InternalMessage)(nil), "log.InternalMessage")
	proto.RegisterType((*LogRequest)(nil), "log.LogRequest")
	proto.RegisterType((*LogResponse)(nil), "log.LogResponse")
}

func init() { proto.RegisterFile("log.proto", fileDescriptor_a153da538f858886) }

var fileDescriptor_a153da538f858886 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0x31, 0x4b, 0xc4, 0x40,
	0x10, 0x85, 0x8d, 0x27, 0x27, 0x99, 0x43, 0x4e, 0x16, 0x8b, 0x90, 0xc6, 0x23, 0xd5, 0x71, 0xc8,
	0x06, 0x4e, 0x0b, 0x0b, 0x2b, 0x3b, 0x21, 0x36, 0xc1, 0xca, 0x2e, 0x39, 0xc6, 0x49, 0x20, 0xbb,
	0x13, 0x77, 0x67, 0x0b, 0xff, 0xbd, 0xb8, 0x21, 0x17, 0xb0, 0xda, 0xdd, 0xb7, 0xef, 0xcd, 0x37,
	0x0f, 0xd2, 0x81, 0x49, 0x8f, 0x8e, 0x85, 0xd5, 0x6a, 0x60, 0xca, 0xef, 0x89, 0x99, 0x06, 0x2c,
	0xa3, 0xd4, 0x86, 0xaf, 0x52, 0x7a, 0x83, 0x5e, 0x1a, 0x33, 0x4e, 0xae, 0xe2, 0x07, 0xb6, 0x6f,
	0x56, 0xd0, 0xd9, 0x66, 0x78, 0x47, 0xef, 0x1b, 0x42, 0xa5, 0xe0, 0x2a, 0x78, 0x74, 0x59, 0xb2,
	0x4b, 0xf6, 0x69, 0x1d, 0xef, 0x2a, 0x83, 0x6b, 0x33, 0x7d, 0x67, 0x97, 0x51, 0x9e, 0x9f, 0xea,
	0x19, 0xd2, 0xf3, 0xcc, 0x6c, 0xb5, 0x4b, 0xf6, 0x9b, 0x63, 0xae, 0x27, 0xaa, 0x9e, 0xa9, 0xfa,
	0x63, 0x76, 0xd4, 0x8b, 0xb9, 0x78, 0x01, 0xa8, 0x98, 0x6a, 0xfc, 0x0e, 0xe8, 0x45, 0xe9, 0x85,
	0x90, 0xc4, 0x29, 0x77, 0xfa, 0xaf, 0xcb, 0xbf, 0xe5, 0xce, 0xdc, 0xe2, 0x06, 0x36, 0x31, 0xed,
	0x47, 0xb6, 0x1e, 0x8f, 0x4f, 0xb0, 0xae, 0x98, 0x08, 0x9d, 0x3a, 0xc0, 0xaa, 0x62, 0x52, 0xdb,
	0x18, 0x5f, 0x00, 0xf9, 0xed, 0x22, 0x4c, 0x99, 0xe2, 0xe2, 0xf5, 0xe1, 0xf3, 0x40, 0xbd, 0x74,
	0xa1, 0xd5, 0x27, 0x36, 0xa5, 0xe9, 0x82, 0x9c, 0xba, 0xde, 0x7a, 0xb6, 0xa5, 0xb8, 0x5e, 0x04,
	0x5d, 0x3c, 0x5b, 0x96, 0x72, 0x60, 0x6a, 0xd7, 0xb1, 0xcf, 0xe3, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x80, 0x5f, 0x36, 0x57, 0x65, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LoggerClient is the client API for Logger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoggerClient interface {
	Log(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*LogResponse, error)
}

type loggerClient struct {
	cc *grpc.ClientConn
}

func NewLoggerClient(cc *grpc.ClientConn) LoggerClient {
	return &loggerClient{cc}
}

func (c *loggerClient) Log(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*LogResponse, error) {
	out := new(LogResponse)
	err := c.cc.Invoke(ctx, "/log.Logger/Log", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoggerServer is the server API for Logger service.
type LoggerServer interface {
	Log(context.Context, *LogRequest) (*LogResponse, error)
}

// UnimplementedLoggerServer can be embedded to have forward compatible implementations.
type UnimplementedLoggerServer struct {
}

func (*UnimplementedLoggerServer) Log(ctx context.Context, req *LogRequest) (*LogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Log not implemented")
}

func RegisterLoggerServer(s *grpc.Server, srv LoggerServer) {
	s.RegisterService(&_Logger_serviceDesc, srv)
}

func _Logger_Log_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServer).Log(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/log.Logger/Log",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServer).Log(ctx, req.(*LogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "log.Logger",
	HandlerType: (*LoggerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Log",
			Handler:    _Logger_Log_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "log.proto",
}
